static uint8_t const sbox[256] = {
    //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, //0
    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, //1
    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, //2
    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, //3
    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, //4
    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, //5
    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, //6
    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, //7
    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, //8
    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, //9
    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, //A
    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, //B
    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, //C
    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, //D
    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, //E
    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16  //F
  }; 

	static uint8_t const rsbox[256] = {
    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
    0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
    0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
    0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
    0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
    0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
    0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
    0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
    0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
    0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
    0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
  };

static uint8_t const S0[256] =
{
	0x51,0x7e,0x1a,0x3a,0x3b,0x1f,0xac,0x4b,0x20,0xad,0x88,0xf5,0x4f,0xc5,0x26,0xb5,
	0xde,0x25,0x45,0x5d,0xc3,0x81,0x8d,0x6b,0x03,0x15,0xbf,0x95,0xd4,0x58,0x49,0x8e,
	0x75,0xf4,0x99,0x27,0xbe,0xf0,0xc9,0x7d,0x63,0xe5,0x97,0x62,0xb1,0xbb,0xfe,0xf9,
	0x70,0x8f,0x94,0x52,0xab,0x72,0xe3,0x66,0xb2,0x2f,0x86,0xd3,0x30,0x23,0x02,0xed,
	0x8a,0xa7,0xf3,0x4e,0x65,0x06,0xd1,0xc4,0x34,0xa2,0x05,0xa4,0x0b,0x40,0x5e,0xbd,
	0x3e,0x96,0xdd,0x4d,0x91,0x71,0x04,0x60,0x19,0xd6,0x89,0x67,0xb0,0x07,0xe7,0x79,
	0xa1,0x7c,0xf8,0x00,0x09,0x32,0x1e,0x6c,0xfd,0x0f,0x3d,0x36,0x0a,0x68,0x9b,0x24,
	0x0c,0x93,0xb4,0x1b,0x80,0x61,0x5a,0x1c,0xe2,0xc0,0x3c,0x12,0x0e,0xf2,0x2d,0x14,
	0x57,0xaf,0xee,0xa3,0xf7,0x5c,0x44,0x5b,0x8b,0xcb,0xb6,0xb8,0xd7,0x42,0x13,0x84,
	0x85,0xd2,0xae,0xc7,0x1d,0xdc,0x0d,0x77,0x2b,0xa9,0x11,0x47,0xa8,0xa0,0x56,0x22,
	0x87,0xd9,0x8c,0x98,0xa6,0xa5,0xda,0x3f,0x2c,0x50,0x6a,0x54,0xf6,0x90,0x2e,0x82,
	0x9f,0x69,0x6f,0xcf,0xc8,0x10,0xe8,0xdb,0xcd,0x6e,0xec,0x83,0xe6,0xaa,0x21,0xef,
	0xba,0x4a,0xea,0x29,0x31,0x2a,0xc6,0x35,0x74,0xfc,0xe0,0x33,0xf1,0x41,0x7f,0x17,
	0x76,0x43,0xcc,0xe4,0x9e,0x4c,0xc1,0x46,0x9d,0x01,0xfa,0xfb,0xb3,0x92,0xe9,0x6d,
	0x9a,0x37,0x59,0xeb,0xce,0xb7,0xe1,0x7a,0x9c,0x55,0x18,0x73,0x53,0x5f,0xdf,0x78,
	0xca,0xb9,0x38,0xc2,0x16,0xbc,0x28,0xff,0x39,0x08,0xd8,0x64,0x7b,0xd5,0x48,0xd0
};

static uint8_t const S1[256] = 
{
	0x50,0x53,0xc3,0x96,0xcb,0xf1,0xab,0x93,0x55,0xf6,0x91,0x25,0xfc,0xd7,0x80,0x8f,
	0x49,0x67,0x98,0xe1,0x02,0x12,0xa3,0xc6,0xe7,0x95,0xeb,0xda,0x2d,0xd3,0x29,0x44,
	0x6a,0x78,0x6b,0xdd,0xb6,0x17,0x66,0xb4,0x18,0x82,0x60,0x45,0xe0,0x84,0x1c,0x94,
	0x58,0x19,0x87,0xb7,0x23,0xe2,0x57,0x2a,0x07,0x03,0x9a,0xa5,0xf2,0xb2,0xba,0x5c,
	0x2b,0x92,0xf0,0xa1,0xcd,0xd5,0x1f,0x8a,0x9d,0xa0,0x32,0x75,0x39,0xaa,0x06,0x51,
	0xf9,0x3d,0xae,0x46,0xb5,0x05,0x6f,0xff,0x24,0x97,0xcc,0x77,0xbd,0x88,0x38,0xdb,
	0x47,0xe9,0xc9,0x00,0x83,0x48,0xac,0x4e,0xfb,0x56,0x1e,0x27,0x64,0x21,0xd1,0x3a,
	0xb1,0x0f,0xd2,0x9e,0x4f,0xa2,0x69,0x16,0x0a,0xe5,0x43,0x1d,0x0b,0xad,0xb9,0xc8,
	0x85,0x4c,0xbb,0xfd,0x9f,0xbc,0xc5,0x34,0x76,0xdc,0x68,0x63,0xca,0x10,0x40,0x20,
	0x7d,0xf8,0x11,0x6d,0x4b,0xf3,0xec,0xd0,0x6c,0x99,0xfa,0x22,0xc4,0x1a,0xd8,0xef,
	0xc7,0xc1,0xfe,0x36,0xcf,0x28,0x26,0xa4,0xe4,0x0d,0x9b,0x62,0xc2,0xe8,0x5e,0xf5,
	0xbe,0x7c,0xa9,0xb3,0x3b,0xa7,0x6e,0x7b,0x09,0xf4,0x01,0xa8,0x65,0x7e,0x08,0xe6,
	0xd9,0xce,0xd4,0xd6,0xaf,0x31,0x30,0xc0,0x37,0xa6,0xb0,0x15,0x4a,0xf7,0x0e,0x2f,
	0x8d,0x4d,0x54,0xdf,0xe3,0x1b,0xb8,0x7f,0x04,0x5d,0x73,0x2e,0x5a,0x52,0x33,0x13,
	0x8c,0x7a,0x8e,0x89,0xee,0x35,0xed,0x3c,0x59,0x3f,0x79,0xbf,0xea,0x5b,0x14,0x86,
	0x81,0x3e,0x2c,0x5f,0x72,0x0c,0x8b,0x41,0x71,0xde,0x9c,0x90,0x61,0x70,0x74,0x42
};

static uint8_t const S2[256] = 
{
	0xa7,0x65,0xa4,0x5e,0x6b,0x45,0x58,0x03,0xfa,0x6d,0x76,0x4c,0xd7,0xcb,0x44,0xa3,
	0x5a,0x1b,0x0e,0xc0,0x75,0xf0,0x97,0xf9,0x5f,0x9c,0x7a,0x59,0x83,0x21,0x69,0xc8,
	0x89,0x79,0x3e,0x71,0x4f,0xad,0xac,0x3a,0x4a,0x31,0x33,0x7f,0x77,0xae,0xa0,0x2b,
	0x68,0xfd,0x6c,0xf8,0xd3,0x02,0x8f,0xab,0x28,0xc2,0x7b,0x08,0x87,0xa5,0x6a,0x82,
	0x1c,0xb4,0xf2,0xe2,0xf4,0xbe,0x62,0xfe,0x53,0x55,0xe1,0xeb,0xec,0xef,0x9f,0x10,
	0x8a,0x06,0x05,0xbd,0x8d,0x5d,0xd4,0x15,0xfb,0xe9,0x43,0x9e,0x42,0x8b,0x5b,0xee,
	0x0a,0x0f,0x1e,0x00,0x86,0xed,0x70,0x72,0xff,0x38,0xd5,0x39,0xd9,0xa6,0x54,0x2e,
	0x67,0xe7,0x96,0x91,0xc5,0x20,0x4b,0x1a,0xba,0x2a,0xe0,0x17,0x0d,0xc7,0xa8,0xa9,
	0x19,0x07,0xdd,0x60,0x26,0xf5,0x3b,0x7e,0x29,0xc6,0xfc,0xf1,0xdc,0x85,0x22,0x11,
	0x24,0x3d,0x32,0xa1,0x2f,0x30,0x52,0xe3,0x16,0xb9,0x48,0x64,0x8c,0x3f,0x2c,0x90,
	0x4e,0xd1,0xa2,0x0b,0x81,0xde,0x8e,0xbf,0x9d,0x92,0xcc,0x46,0x13,0xb8,0xf7,0xaf,
	0x80,0x93,0x2d,0x12,0x99,0x7d,0x63,0xbb,0x78,0x18,0xb7,0x9a,0x6e,0xe6,0xcf,0xe8,
	0x9b,0x36,0x09,0x7c,0xb2,0x23,0x94,0x66,0xbc,0xca,0xd0,0xd8,0x98,0xda,0x50,0xf6,
	0xd6,0xb0,0x4d,0x04,0xb5,0x88,0x1f,0x51,0xea,0x35,0x74,0x41,0x1d,0xd2,0x56,0x47,
	0x61,0x0c,0x14,0x3c,0x27,0xc9,0xe5,0xb1,0xdf,0x73,0xce,0x37,0xcd,0xaa,0x6f,0xdb,
	0xf3,0xc4,0x34,0x40,0xc3,0x25,0x49,0x95,0x01,0xb3,0xe4,0xc1,0x84,0xb6,0x5c,0x57
};

static uint8_t const S3[256] = 
{
	0xf4,0x41,0x17,0x27,0xab,0x9d,0xfa,0xe3,0x30,0x76,0xcc,0x02,0xe5,0x2a,0x35,0x62,
	0xb1,0xba,0xea,0xfe,0x2f,0x4c,0x46,0xd3,0x8f,0x92,0x6d,0x52,0xbe,0x74,0xe0,0xc9,
	0xc2,0x8e,0x58,0xb9,0xe1,0x88,0x20,0xce,0xdf,0x1a,0x51,0x53,0x64,0x6b,0x81,0x08,
	0x48,0x45,0xde,0x7b,0x73,0x4b,0x1f,0x55,0xeb,0xb5,0xc5,0x37,0x28,0xbf,0x03,0x16,
	0xcf,0x79,0x07,0x69,0xda,0x05,0x34,0xa6,0x2e,0xf3,0x8a,0xf6,0x83,0x60,0x71,0x6e,
	0x21,0xdd,0x3e,0xe6,0x54,0xc4,0x06,0x50,0x98,0xbd,0x40,0xd9,0xe8,0x89,0x19,0xc8,
	0x7c,0x42,0x84,0x00,0x80,0x2b,0x11,0x5a,0x0e,0x85,0xae,0x2d,0x0f,0x5c,0x5b,0x36,
	0x0a,0x57,0xee,0x9b,0xc0,0xdc,0x77,0x12,0x93,0xa0,0x22,0x1b,0x09,0x8b,0xb6,0x1e,
	0xf1,0x75,0x99,0x7f,0x01,0x72,0x66,0xfb,0x43,0x23,0xed,0xe4,0x31,0x63,0x97,0xc6,
	0x4a,0xbb,0xf9,0x29,0x9e,0xb2,0x86,0xc1,0xb3,0x70,0x94,0xe9,0xfc,0xf0,0x7d,0x33,
	0x49,0x38,0xca,0xd4,0xf5,0x7a,0xb7,0xad,0x3a,0x78,0x5f,0x7e,0x8d,0xd8,0x39,0xc3,
	0x5d,0xd0,0xd5,0x25,0xac,0x18,0x9c,0x3b,0x26,0x59,0x9a,0x4f,0x95,0xff,0xbc,0x15,
	0xe7,0x6f,0x9f,0xb0,0xa4,0x3f,0xa5,0xa2,0x4e,0x82,0x90,0xa7,0x04,0xec,0xcd,0x91,
	0x4d,0xef,0xaa,0x96,0xd1,0x6a,0x2c,0x65,0x5e,0x8c,0x87,0x0b,0x67,0xdb,0x10,0xd6,
	0xd7,0xa1,0xf8,0x13,0xa9,0x61,0x1c,0x47,0xd2,0xf2,0x14,0xc7,0xf7,0xfd,0x3d,0x44,
	0xaf,0x68,0x24,0xa3,0x1d,0xe2,0x3c,0x0d,0xa8,0x0c,0xb4,0x56,0xcb,0x32,0x6c,0xb8
};


uint8_t get_x1( uint8_t c0, uint8_t c1, uint8_t k0, uint8_t k1 ){
	uint8_t x1 = 0;
	x1 = S1[c0 ^ k0] ^ S2[c1 ^ k1];
	return x1;
}

uint8_t get_x2( uint8_t x1, uint8_t c2, uint8_t k2 ){
	uint8_t x2 = 0;
	x2 = x1 ^ S2[c2 ^ k2];
	return x2;
}
uint8_t get_x3( uint8_t x2, uint8_t c3, uint8_t k3 ){
	uint8_t x3 = 0;
	x3 = x2 ^ S3[c3 ^ k3];
	return x3;
}
//compute S4(x4 + S3(x3) + S2(x2) + S1(x1) + S0(x0))
uint8_t evaluate_F(uint64_t ctext, uint64_t k4){
    uint8_t v[4];
    value_to_array(v, ctext, 4);
	uint8_t x1 = S0[v[0]] ^ S1[v[1]];
	uint8_t x2 = x1 ^ S2[v[2]];
	uint8_t x3 = x2 ^ S3[v[3]];
    uint8_t x = rsbox[x3 ^ k4];
    return x;  
}
//compute S1(x1)+S0(x0)
uint8_t evaluate_F2(uint64_t ctext){
    uint8_t v[2];
    value_to_array(v, ctext, 2);
	uint8_t x1 = S0[v[0]] ^ S1[v[1]];
	return x1;
}
//compute S2(x2)
uint8_t evaluate_F3(uint8_t x2){
	uint8_t x3 = S2[x2];
	return x3;
}
//compute S3(x3)
uint8_t evaluate_F4(uint8_t x3){
	uint8_t x4 = S3[x3];
	return x4;
}
//compute S4(x4)
uint8_t evaluate_F5(uint8_t x4){
	uint8_t x5 = rsbox[x4];
	return x5;
}
uint64_t SS0(uint64_t x){ 
    uint64_t y = S0[x];
    return y;
}
uint64_t SS1(uint64_t x){ 
    uint64_t y = S1[x];
    return y;
}
uint64_t SS2(uint64_t x){ 
    uint64_t y = S2[x];
    return y;
}
uint64_t SS3(uint64_t x){ 
    uint64_t y = S3[x];
    return y;
}
uint64_t SS4(uint64_t x){ 
    uint64_t y = rsbox[x];
    return y;
}

unsigned char galois_multiplication(unsigned char a, unsigned char b)
{
    unsigned char p = 0;
    unsigned char counter;
    unsigned char hi_bit_set;
    for (counter = 0; counter < 8; counter++)
    {
        if ((b & 1) == 1)
            p ^= a;
        hi_bit_set = (a & 0x80);
        a <<= 1;
        if (hi_bit_set == 0x80)
            a ^= 0x1b;
        b >>= 1;
    }
    return p;
}
void invMixColumn_column(uint8_t *column)
{
    uint8_t cpy[4];
    int i;
    for (i = 0; i < 4; i++)
    {
        cpy[i] = column[i];
    }
    column[0] = galois_multiplication(cpy[0], 14) ^
                galois_multiplication(cpy[3], 9) ^
                galois_multiplication(cpy[2], 13) ^
                galois_multiplication(cpy[1], 11);
    column[1] = galois_multiplication(cpy[1], 14) ^
                galois_multiplication(cpy[0], 9) ^
                galois_multiplication(cpy[3], 13) ^
                galois_multiplication(cpy[2], 11);
    column[2] = galois_multiplication(cpy[2], 14) ^
                galois_multiplication(cpy[1], 9) ^
                galois_multiplication(cpy[0], 13) ^
                galois_multiplication(cpy[3], 11);
    column[3] = galois_multiplication(cpy[3], 14) ^
                galois_multiplication(cpy[2], 9) ^
                galois_multiplication(cpy[1], 13) ^
                galois_multiplication(cpy[0], 11);
}

void inverseMixColumn(uint8_t *state){
    uint8_t column[4];

    /* iterate over the 4 columns */
    for (int c=0; c<4; c++){
        /* construct one column by iterating over the 4 rows */
        for (int r=0; r<4; r++){
            column[r] = state[(c * 4) + r];
        }
        printreg(column, 4);
        /* apply the invMixColumn on one column */
        invMixColumn_column(column);

        /* put the values back into the state */
        for (int r=0; r<4; r++)
        {
            state[(c * 4) + r] = column[r];
        }
    }
}
